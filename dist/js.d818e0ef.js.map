{"version":3,"sources":["src/js/EventBuilder.js","src/js/EventArray.js","src/js/EventModel.js","src/js/index.js"],"names":["EventBuilder","Title","Day","Day2","isOnCalendar","isOnCalendar2","Caption","withTitle","value","withDay","withDay2","withCaption","build","isDefined","string","undefined","EventArray","userEventMaker","event","parts","split","mydate","Date","splitArray","toDateString","monthAndDay","parts2","mydate2","splitArray2","monthAndDay2","push","createEventModel","eventOject","element","Glider","document","querySelector","slidesToShow","slideToScroll","dots","arrows","prev","next","glider","sort","a","b","map","forEach","card","cardWrap","style","width","length","innerHTML"],"mappings":";;AGAA;;AACA;;AACA;AFFA,ADAA,AECA,IFDMA,AECA+B,YFDY,GAAG,CECC,GAAG,KFDnB/B,IECA+B,QFDe,GAAM,KECF,CAACC,UAAD,EAAgB;AFArC,AEGA,MFHI/B,AEGEgC,KFHG,EEGI,CFHD,EAAZ,wHEMoBD,UAAU,CAAC/B,KAHlB,mIAMmB+B,UAAU,CAAC5B,YAAX,IAA2B,UAN9C,gBAM6D4B,UAAU,CAAC9B,GANxE,kDAOe8B,UAAU,CAAC3B,aAAX,IAA4B,UAP3C,gBAO0D2B,UAAU,CAAC7B,IAPrE,kFASsB6B,UAAU,CAAC1B,OATjC,wEAAb;AFFA,AEmBA,MFnBIJ,GAAG,AEmBA+B,GFnBG,IEmBV,mBFnBA;AACA,AEmBH,AClBD,CDHA,KFEQ9B,IAAI,GAAG,EAAX;ACDJ,ADEI,AGCJ,IFHMU,AEGFqB,EHDI9B,IGCR,CAAW+B,EFHI,GAAG,GDEE,AGCD,CAACC,EHDG,GCFjBvB,EDEF,MGCO,CFHO,AEGgB,CFHfC,MAAD,EEGP,CAAX,EAA8C;AFH5B,ADGd,AGCAuB,EAAAA,IHDIhC,GCHsBS,KEId,CFJoB,ACuBrBiB,CCnBG,CAD4B,EFHN,CDGnB,GCHS,ADGN,ICHwBjB,CDG5C,KCHkD,IAAIC,SAAxC;AAAA,ADId,AGCAuB,CFLJ,CEKIA,IHDIhC,OAAO,EGCE,CHDC,CGCC,CHDf,AGD0C;AHG1C,AGCAiC,EAAAA,IAAI,EAAE,CHDA,MGHoC;AFD9C,ADKQhC,AGCJiC,EAAAA,EFNAxB,ADKIT,IGCE,EAAE,GHFF,CCJI,GAAG,EAAjB,eDKkBC,KADR,EACc;AACZP,AGCNwC,IAAAA,EHDMxC,EGCF,EAAE,CHDK,GAAGO,KAAR,KGAA;AHCA,AGCNkC,IAAAA,IAAI,EAAE,GHDO,IAAP;ACLZ,ADMS,AGFG,IFJNzB,CDEI,aCFU,GAAG,SAAjBA,cAAiB,OAOlB;AAAA,ADAGR,AGRsC,CAA9C,GHQQA,AGGR,EFTIR,KAMC,ADLK,QCDNA,KAMC,MDAWO,KALN,EAKY;ACAjB,ADCON,MCNRA,ADMQA,GCDP,ADCU,GAAGM,KCNdN,ADMQ,GCDP;AAAA,ADEO,AGEZ,MFRIC,IAIC,GDEc,IAAP,CCNRA,IAIC,UEIU;AFJV,ADGI,AGEPF,EAAAA,GHVQ,CCENG,CEQG,EAAE,SFLJ,QAHDA,GEOW,SFJV;AAAA,ADIGM,AGENJ,EAAAA,EHFMI,ECNJL,GEQK,EAAE,CHXD,OCKL,QAFDA,KDMaG,KATP,EASa,CCJlB;AAAA,ADKOL,AGDG,CAAf,KFLIG,ADMQH,IAAI,GCLX,ADKcK,KAAP,GCNRF,OACC;AACD,ADKQ,AGEZ,MFPUY,KAAK,EDKI,CCLD,GDKN,eGEG,UFPX;AAEAA,ADIK,AGEPjB,EFNEiB,AEMFjB,GHdQ,ECQD,AEMF,CFNGM,CEMD,QFNL,CAAgBN,KAAhB,KEKW;AHAPG,AGENF,EAAAA,EHFME,CGEH,EAAE,SHfG,GGaK,qBHAMI,KAbX,EAaiB;ACHvB,ADIQJ,AGEVE,EAAAA,IFNKO,ADIKT,GGEH,EAAE,IFNK,CAACF,GAAD,ADIQ,CCJpB,EAAkB,ADIKM,KAAf;ACFJ,ADGI,AGFG,CAAf,OFDYW,KAAK,ADGE,GCHCjB,CDGR,ECHW,CAACkB,KAAJ,CAAU,GAAV,CAAZ;AACA,ADGC,AGET,KHlBU,GCaEC,MAAM,GAAG,IAAIC,IAAJ,CAASH,KAAK,CAAC,AEKrB,CFLoB,CAAd,EAAmBA,KAAK,CAAC,CAAD,CAAL,GAAW,CAA9B,EAAiCA,KAAK,CAAC,CAAD,CAAtC,CAAb;ADIAd,AGENJ,EAAAA,EHFMI,GGED,EAAE,QHnBC,sBGkBK,GHDOG,KAjBZ,EAiBkB;ACFpB,ADGIH,AGEVH,EAAAA,GAAG,CHFOG,CGEL,CFLKgB,MAAM,IAAI,CEGP,CHAU,GAAGb,KAAhB,ICHJ,EAA6B;AACzBU,ADGA,AGEVf,EAAAA,IFLUe,AEKN,EAAE,GFLS,CAACT,CDGC,IAAP,ECHA,CAAcP,AEEX,GFFH;AACH,ADGA,AGEPI,EAAAA,GFPM,ADfE,IGsBD,EFJG,AEID;AFHC,ADEJK,AGHO,CAAf,GHGQA,MCFQY,KDnBN,KCmBgB,GAAGF,MAAM,CAACG,QDEhBhB,ICFS,CDnBnB,ECmByCY,ADEzB,KCFG,CAA4B,GAA5B,CAAjB;AACA,ADEAd,AGEZ,MHFYA,ICFImB,GDEG,GAAGjB,KCFK,ADEf,WGEG,wBFJsCe,UAAU,CAAC,CAAD,CAApC,6CAAwEA,UAAU,CAAC,CAAD,CAAlF,aAAf,CAFA,CAGA;ADEA,AGEVtB,EAAAA,KAAK,EAAE,IHFU,IAAP,EGCG;AFFHG,ADEH,AGEPF,EAAAA,GH1BQ,AG0BL,CFJOE,CEIL,WFJiB,GAAG,IAAf,YEEG;AFDHc,ADKJN,AGDNN,EAAAA,EHCMM,ECLIM,GDvBF,AG2BD,EFJQ,AEIN,CFJOd,YAAN,CAAmBA,GDKhB,SCLH;AACAc,ADKA,AGLG,CAAf,KFAYA,KAAK,CAACT,CDKA,MCLN,CAAcgB,WAAd;AAEH,ADIOxB,AGAhB,QHAgBA,KAAK,EAALA,KADE,YGCH;AFFV,ADGWC,AGAdD,EAAAA,KAAK,CHASC,CGAP,EHAU,EAAHA,GAFE,uBGCH;AHECC,AGAdD,EAAAA,GAAG,EAAE,CHASC,IAAI,EAAJA,IAHE,CGCH;AFAX,ADGYC,AGAdE,EAAAA,IFHKO,EDGST,CGAP,EAAE,IFHK,CAACD,IAAD,ADGY,CCHxB,CDGYC,CCHO,YDDL;ACGV,ADEQC,AGJD,CAAf,OFEYqB,ADEIrB,MCFE,GAAGF,IAAI,ADEI,CCFHiB,CDEVf,ICFK,CAAW,GAAX,CAAb,KDHU;ACIV,ADEQC,AGChB,QFHYqB,ADEIrB,OCFG,ADEI,EAAPA,CCFM,IAAIgB,IAAJ,CAASI,KEGhB,CFHsB,CAAC,CAAD,CAAf,EAAoBA,MAAM,CAAC,CAAD,CAAN,GAAY,CAAhC,EAAmCA,MAAM,CAAC,CAAD,CAAzC,CAAd;ADJU,AGQhBzB,EAAAA,KHRU,AGQL,EAAE,8BADM;AFDP,ADGC,AGAPC,EAAAA,GAAG,EAAE,CFHKyB,OAAO,IAAI,AECR,cFDP,EAA8B;AAC1BT,ADpCF,AGuCRZ,EAAAA,CHvCE,GCoCQY,GEGH,EFHQ,AEGN,CFHOR,QAAN,CAAeP,IAAf;AACH,ADGR,AGJc,CH5Cf,AG4CA,GAOA,CFRQ,MAGI;AACA,AESZ,UFTgByB,WAAW,GAAGD,OAAO,CAACH,YAAR,GAAuBJ,KAAvB,CAA6B,GAA7B,CAAlB;AACA,UAAIS,KDED7B,OCFa,mCAA0B4B,WAAW,CAAC,CAAD,CAArC,6CAAyEA,WAAW,CAAC,CAAD,CAApF,aAAhB,CAFA,CAGA;AESZ,IAAIe,MAAM,GAAG,EAAb;AFRYtC,MAAAA,aAAa,GAAG,IAAhB;AACAa,AEQZF,MFRYE,KAAK,CAACb,WEQPuC,EFRC,CAAoBxC,CEQhC,CAAgB,UFRJ,AEQKyC,CAAD,EAAIC,CAAJ;AFPJ5B,AEOI,MFPJA,GEOc4B,CAAC,CFPV,AEOW5C,CFPVQ,EEOQ,GAAQmC,CAAC,CAAC3C,CFPxB,CAAe2B,CEOX,WFPJ;AAEH,AEKO,CAAhB;AFHK;AEILb,uBACG+B,GADH,CACO,UAAC7B,KAAD;AFFHA,AEEG,EFFHA,KAAK,CAACP,CEEQ,UFFd,CAAkBL,OAAlB,OEE+BY,KAAjB,CAAX;AFAHF,AEAG,CADP,CFCIA,CECDgC,OAFH,CAEW,CFDG,CAAClB,IAAX,CAAgBZ,GECR+B,EFDa,CAACrC,CECf,EAAU,EFDD,EAAhB;AACH,AECG+B,CFzDJ,CEyDIA,MAAM,IAAIM,IAAV;AACD,CAJH;;AAQE,IAAIC,QAAQ,GAAGf,QAAQ,CAACC,aAAT,CAAuB,uBAAvB,CAAf;AACAc,QAAQ,CAACC,KAAT,CAAeC,KAAf,aAA0BpC,uBAAWqC,MAAX,GAAoB,GAA9C;AACAH,QAAQ,CAACI,SAAT,GAAqBX,MAArB","file":"js.d818e0ef.js","sourceRoot":"..","sourcesContent":["const EventBuilder = () => {\n    let Title = \"\";\n    let Day = \"Dates to be announced\";\n    let Day2 = \"\";\n    let isOnCalendar = false;\n    let isOnCalendar2 = false;\n    let Caption = \"\";\n\n    return{\n        withTitle(value){\n            Title = value;\n            return this;\n        },\n        withDay(value){\n            Day = value;\n            return this;\n        },\n        withDay2(value){\n            Day2 = value;\n            return this;\n        },\n        isOnCalendar(value){\n            isOnCalendar = value;\n            return this;\n        },\n        isOnCalendar2(value){\n            isOnCalendar2 = value;\n            return this;\n        },\n        withCaption(value){\n            Caption = value;\n            return this;\n        },\n\n\n\n        build(){\n            return{\n                Title,\n                Day,\n                Day2,\n                isOnCalendar,\n                isOnCalendar2,\n                Caption,\n\n            }\n        }\n    }\n}\n\nexport default EventBuilder","import EventBuilder from './EventBuilder'\n\nconst isDefined = (string) => string != null || string != undefined\n\nlet EventArray = [];\n\nconst userEventMaker = ({\n    Title,\n    Day,\n    Day2,\n    isOnCalendar,\n    isOnCalendar2,\n    Caption,\n}) =>{\n    const event = EventBuilder();\n\n    event.withTitle(Title);\n\n    if(isDefined(Day)){\n\n        let parts = Day.split('-');\n        let mydate = new Date(parts[0], parts[1] - 1, parts[2]);\n\n        if( mydate == \"Invalid Date\"){\n            event.withDay(Day)\n        }\n        else{\n            let splitArray = mydate.toDateString().split(\" \");\n            let monthAndDay = `<span class=\"month\">${splitArray[1]}</span>  <span class=\"number\">${splitArray[2]}</span> `\n            // document.querySelector(\".day\").classList.add(\"isOnCalendar\");\n            isOnCalendar = true\n            event.isOnCalendar(isOnCalendar)\n            event.withDay(monthAndDay)\n            \n        }\n        \n    }\n\n    if(isDefined(Day2)){\n\n        let parts2 = Day2.split('-');\n        let mydate2 = new Date(parts2[0], parts2[1] - 1, parts2[2]);\n\n        if( mydate2 == \"Invalid Date\"){\n            event.withDay2(Day2)\n        }\n        else{\n            let splitArray2 = mydate2.toDateString().split(\" \");\n            let monthAndDay2 = `<span class=\"month\">${splitArray2[1]}</span>  <span class=\"number\">${splitArray2[2]}</span> `\n            // document.querySelector(\".day\").classList.add(\"isOnCalendar\");\n            isOnCalendar2 = true\n            event.isOnCalendar2(isOnCalendar)\n            event.withDay2(monthAndDay2)\n            \n        }\n        \n    }\n\n\n    event.withCaption(Caption);\n\n    EventArray.push(event.build())\n}\n\nexport {userEventMaker, EventArray}","\nconst createEventModel = (eventOject) => {\n  \n  \n    const element = `\n            \n            <div class=\"card\" style=\"height: auto; width: 443px;\">\n              <header>${eventOject.Title}</header>\n              <content>\n                <div class=\"calendar-wrap\">\n                    <p class=\"day ${eventOject.isOnCalendar && 'calendar'}\">${eventOject.Day}</p>\n                    <p class=\"${eventOject.isOnCalendar2 && 'calendar'}\">${eventOject.Day2}</p>\n                </div>\n                <p class=\"paragraph\">${eventOject.Caption}</p>\n              </content>\n            </div> \n\n            `;\n\n\n\n    return element;\n};\n\n\nexport default createEventModel","import EventBuilder from './EventBuilder'\nimport { userEventMaker, EventArray } from './EventArray'\nimport createEventModel from './EventModel'\n\n// Caraousel from Glider.js Library\nnew Glider(document.querySelector('.glider'), {\n    slidesToShow: 3,\n    slideToScroll: 1,\n    \n    dots: '#dots',\n    arrows: {\n      prev: '.glider-prev',\n      next: '.glider-next',\n    },\n  });\n\n//--------------------------------------------------------------------------------------\nuserEventMaker({\n  Title: \"Know Your Audience\",\n  Caption: \"An Alda-certified instructor will help scientists and other researchers learn to identify and better understand the people they will be addressing.\",\n});\nuserEventMaker({\n  Title: \"Know Your Tactics\",\n  Day: \"2020-04-02\",\n  Caption: \"An Alda-certified instructor will help scientists and other researchers learn to identify and better understand the people they will be addressing.\",\n});\nuserEventMaker({\n  Title: \"Making Your Case to Congress\",\n  Day: \"2020-11-21\",\n  Day2: \"2020-12-02\",\n  Caption: \"An Alda-certified instructor will help scientists and other researchers learn to identify and better understand the people they will be addressing.\",\n});\nuserEventMaker({\n  Title: \"Webinars\",\n  Day: \"Presented live and on-demand\",\n  Caption: \"An Alda-certified instructor will help scientists and other researchers learn to identify and better understand the people they will be addressing.\",\n});\n\nuserEventMaker({\n  Title: \"Making Your Case to Congress\",\n  Day: \"2020-04-03\",\n  Caption: \"An Alda-certified instructor will help scientists and other researchers learn to identify and better understand the people they will be addressing.\",\n});\n\nuserEventMaker({\n  Title: \"Making Your Case to Congress\",\n  Day: \"2020-05-23\",\n  Caption: \"An Alda-certified instructor will help scientists and other researchers learn to identify and better understand the people they will be addressing.\",\n});\n\n\n//--------------------------------------------------------------------------------------\n\n\n\n\n// Map Event into Glider\n\nlet glider = '';\nEventArray.sort((a, b) => b.Day - a.Day) \nEventArray\n  .map((event) => createEventModel(event))\n  .forEach((card) => {\n    glider += card;\n  });\n\n   \n  \n  let cardWrap = document.querySelector('.glider .glider-track');\n  cardWrap.style.width = `${EventArray.length * 430}px`;\n  cardWrap.innerHTML = glider;\n  "]}